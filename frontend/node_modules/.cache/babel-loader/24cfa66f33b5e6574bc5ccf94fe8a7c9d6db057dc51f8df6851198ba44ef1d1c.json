{"ast":null,"code":"var _jsxFileName = \"/Volumes/WorkSpace/React_Course/project-16/frontend/src/pages/EventsPage.js\",\n  _s = $RefreshSig$();\nimport { Suspense } from \"react\";\nimport { useLoaderData, json, defer, Await } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventsPage = props => {\n  _s();\n  const {\n    events\n  } = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Loading.......\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 23\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Await, {\n      resolve: events,\n      children: loaderEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n        events: loaderEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 24\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }, this);\n};\n_s(EventsPage, \"xTcuS98fsVcq20se00iLm8bDBmQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nasync function loaderData() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    //TODO: Error handling here\n    // throw new Response(JSON.stringify({ message: \" Could not fetch data\" }), {\n    // \tstatus: 500,\n    // });\n    throw json({\n      message: \" Could not fetch data\"\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nexport function loader() {\n  return defer({\n    events: loaderData()\n  });\n}\nexport default EventsPage;\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["Suspense","useLoaderData","json","defer","Await","EventsList","jsxDEV","_jsxDEV","EventsPage","props","_s","events","fallback","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","resolve","loaderEvents","_c","loaderData","response","fetch","ok","message","status","resData","loader","$RefreshReg$"],"sources":["/Volumes/WorkSpace/React_Course/project-16/frontend/src/pages/EventsPage.js"],"sourcesContent":["import { Suspense } from \"react\";\nimport { useLoaderData, json, defer, Await } from \"react-router-dom\";\n\nimport EventsList from \"../components/EventsList\";\nconst EventsPage = (props) => {\n\tconst { events } = useLoaderData();\n\n\treturn (\n\t\t<Suspense fallback={<p style={{ textAlign: \"center\" }}>Loading.......</p>}>\n\t\t\t<Await resolve={events}>\n\t\t\t\t{(loaderEvents) => <EventsList events={loaderEvents} />}\n\t\t\t</Await>\n\t\t</Suspense>\n\t);\n};\n\nasync function loaderData() {\n\tconst response = await fetch(\"http://localhost:8080/events\");\n\n\tif (!response.ok) {\n\t\t//TODO: Error handling here\n\t\t// throw new Response(JSON.stringify({ message: \" Could not fetch data\" }), {\n\t\t// \tstatus: 500,\n\t\t// });\n\t\tthrow json({ message: \" Could not fetch data\" }, { status: 500 });\n\t} else {\n\t\tconst resData = await response.json();\n\t\treturn resData.events;\n\t}\n}\n\nexport function loader() {\n\treturn defer({\n\t\tevents: loaderData(),\n\t});\n}\n\nexport default EventsPage;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,aAAa,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,QAAQ,kBAAkB;AAEpE,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAClD,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC7B,MAAM;IAAEC;EAAO,CAAC,GAAGV,aAAa,CAAC,CAAC;EAElC,oBACCM,OAAA,CAACP,QAAQ;IAACY,QAAQ,eAAEL,OAAA;MAAGM,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAC,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAE;IAAAJ,QAAA,eACzER,OAAA,CAACH,KAAK;MAACgB,OAAO,EAAET,MAAO;MAAAI,QAAA,EACpBM,YAAY,iBAAKd,OAAA,CAACF,UAAU;QAACM,MAAM,EAAEU;MAAa;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEb,CAAC;AAACT,EAAA,CAVIF,UAAU;EAAA,QACIP,aAAa;AAAA;AAAAqB,EAAA,GAD3Bd,UAAU;AAYhB,eAAee,UAAUA,CAAA,EAAG;EAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACjB;IACA;IACA;IACA;IACA,MAAMxB,IAAI,CAAC;MAAEyB,OAAO,EAAE;IAAwB,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EAClE,CAAC,MAAM;IACN,MAAMC,OAAO,GAAG,MAAML,QAAQ,CAACtB,IAAI,CAAC,CAAC;IACrC,OAAO2B,OAAO,CAAClB,MAAM;EACtB;AACD;AAEA,OAAO,SAASmB,MAAMA,CAAA,EAAG;EACxB,OAAO3B,KAAK,CAAC;IACZQ,MAAM,EAAEY,UAAU,CAAC;EACpB,CAAC,CAAC;AACH;AAEA,eAAef,UAAU;AAAC,IAAAc,EAAA;AAAAS,YAAA,CAAAT,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}