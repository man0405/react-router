{"ast":null,"code":"var _jsxFileName = \"/Volumes/WorkSpace/React_Course/project-16/frontend/src/pages/EventDetailPage.js\",\n  _s = $RefreshSig$();\nimport { useParams, json } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = props => {\n  _s();\n  const params = useParams();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Event Detail Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Event detail \", params.eventId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 3\n  }, this);\n};\n_s(EventDetailPage, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch details for selected event\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["useParams","json","jsxDEV","_jsxDEV","EventDetailPage","props","_s","params","children","fileName","_jsxFileName","lineNumber","columnNumber","eventId","_c","loader","request","id","response","fetch","ok","message","status","$RefreshReg$"],"sources":["/Volumes/WorkSpace/React_Course/project-16/frontend/src/pages/EventDetailPage.js"],"sourcesContent":["import { useParams, json } from \"react-router-dom\";\nconst EventDetailPage = (props) => {\n\tconst params = useParams();\n\treturn (\n\t\t<div>\n\t\t\t<p>Event Detail Page</p>\n\t\t\t<h1>Event detail {params.eventId}</h1>\n\t\t</div>\n\t);\n};\n\nexport default EventDetailPage;\n\nexport async function loader({ request, params }) {\n\tconst id = params.eventId;\n\n\tconst response = await fetch(\"http://localhost:8080/events/\" + id);\n\n\tif (!response.ok) {\n\t\tthrow json(\n\t\t\t{ message: \"Could not fetch details for selected event\" },\n\t\t\t{ status: 500 }\n\t\t);\n\t} else {\n\t\treturn response;\n\t}\n}\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACnD,MAAMC,eAAe,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAClC,MAAMC,MAAM,GAAGP,SAAS,CAAC,CAAC;EAC1B,oBACCG,OAAA;IAAAK,QAAA,gBACCL,OAAA;MAAAK,QAAA,EAAG;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACxBT,OAAA;MAAAK,QAAA,GAAI,eAAa,EAACD,MAAM,CAACM,OAAO;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAER,CAAC;AAACN,EAAA,CARIF,eAAe;EAAA,QACLJ,SAAS;AAAA;AAAAc,EAAA,GADnBV,eAAe;AAUrB,eAAeA,eAAe;AAE9B,OAAO,eAAeW,MAAMA,CAAC;EAAEC,OAAO;EAAET;AAAO,CAAC,EAAE;EACjD,MAAMU,EAAE,GAAGV,MAAM,CAACM,OAAO;EAEzB,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGF,EAAE,CAAC;EAElE,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;IACjB,MAAMnB,IAAI,CACT;MAAEoB,OAAO,EAAE;IAA6C,CAAC,EACzD;MAAEC,MAAM,EAAE;IAAI,CACf,CAAC;EACF,CAAC,MAAM;IACN,OAAOJ,QAAQ;EAChB;AACD;AAAC,IAAAJ,EAAA;AAAAS,YAAA,CAAAT,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}